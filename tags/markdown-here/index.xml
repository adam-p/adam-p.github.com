<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Markdown Here on adam-p</title><link>https://adam-p.ca/tags/markdown-here/</link><description>Recent content in Markdown Here on adam-p</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Jul 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://adam-p.ca/tags/markdown-here/index.xml" rel="self" type="application/rss+xml"/><item><title>Markdown Here: Splitting the Firefox and Thunderbird Extension</title><link>https://adam-p.ca/blog/2016/07/mdh-dividing-firefox-and-thunderbird/</link><pubDate>Thu, 14 Jul 2016 00:00:00 +0000</pubDate><guid>https://adam-p.ca/blog/2016/07/mdh-dividing-firefox-and-thunderbird/</guid><description>[This started as notes to myself to help clarify the problem and solution. It&amp;rsquo;s probably more suited to a Github issue than a blog post, and it may get copied into one.]
The story so far The Firefox and Thunderbird versions of Markdown Here both used nearly the same code &amp;ndash; an old-style XUL extension. Tb is only capable of using a XUL extension, while Fx supports at least three extension types: XUL-based, Add-on SDK (aka Jetpack, aka jpm), and WebExtensions.</description></item><item><title>Why and How to Use a Contributor License Agreement</title><link>https://adam-p.ca/blog/2015/02/contributor-license-agreement/</link><pubDate>Tue, 17 Feb 2015 00:00:00 +0000</pubDate><guid>https://adam-p.ca/blog/2015/02/contributor-license-agreement/</guid><description>Background and Motivation I received a pull request for Markdown Here that was great: it found a bug, fixed it, and included tests for the fix. However, the PR submitter didn&amp;rsquo;t write the tests using the existing framework, so I figured I&amp;rsquo;d massage his test code into the proper form.
And then I noticed that he included a copyright line in the test file. It says &amp;ldquo;MIT License&amp;rdquo;, which is the license used for the rest of the project, but that got me thinking about what that might mean&amp;hellip;</description></item><item><title>Safari Extensions Gallery: half-baked</title><link>https://adam-p.ca/blog/2013/06/safari-extensions-gallery-half-baked/</link><pubDate>Tue, 25 Jun 2013 00:00:00 +0000</pubDate><guid>https://adam-p.ca/blog/2013/06/safari-extensions-gallery-half-baked/</guid><description>Trying to get Markdown Here listed in the Safari Extensions Gallery is by far the worst browser extension &amp;ldquo;store&amp;rdquo; experience I&amp;rsquo;ve had so far. Shockingly bad.
No hosting First of all, but least of all: There&amp;rsquo;s no hosting. Unlike the Chrome and Mozilla stores, the Safari store doesn&amp;rsquo;t host the extension for you &amp;ndash; it&amp;rsquo;s really more of a listing of links to wherever you host your extension files. That&amp;rsquo;s not terrible, but:</description></item><item><title>No One Knows to Click on a Page Action</title><link>https://adam-p.ca/blog/2013/03/pageaction-interaction/</link><pubDate>Sun, 24 Mar 2013 00:00:00 +0000</pubDate><guid>https://adam-p.ca/blog/2013/03/pageaction-interaction/</guid><description>Page actions &amp;ndash; the buttons in a browser&amp;rsquo;s address bar &amp;ndash; are a surprising UI failure.
When adding a button for a browser extension, a choice must be made whether to make it a &amp;ldquo;page action&amp;rdquo; or a &amp;ldquo;browser action&amp;rdquo; (button on the toolbar). But browsers have failed to communicate the interactiveness of page actions, and almost no one &amp;ndash; techy or layman &amp;ndash; realizes that they&amp;rsquo;re clickable.
To complement the context menu item and hotkey, and to fulfil a user feature request, I decided to add a button to the Markdown Here browser extension.</description></item></channel></rss>